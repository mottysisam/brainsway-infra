# Generated by Claude on 2025-08-13 for: Lambda Test Runner S3 bucket for reports storage

include "root" { path = find_in_parent_folders() }
terraform { source = "../../../../modules/s3" }

locals {
  env_vars = read_terragrunt_config(find_in_parent_folders("env.hcl"))
  environment = local.env_vars.locals.env
  aws_account = local.env_vars.locals.aws_account
  aws_region = local.env_vars.locals.aws_region
}

dependency "iam" {
  config_path = "../iam-lambda-test-runner"
}

inputs = {
  buckets = {
    "bw-lambda-test-reports" = {
      force_destroy = true
      
      # Lifecycle configuration to manage old test reports
      lifecycle_configuration = {
        rule = [
          {
            id     = "test_reports_lifecycle"
            status = "Enabled"
            
            # Delete old test reports after 30 days
            expiration = {
              days = 30
            }
            
            # Transition to IA after 7 days for cost optimization
            transition = [
              {
                days          = 7
                storage_class = "STANDARD_IA"
              },
              {
                days          = 14
                storage_class = "GLACIER"
              }
            ]
          }
        ]
      }
      
      # CORS configuration for web dashboard access
      cors_rule = [
        {
          allowed_headers = ["*"]
          allowed_methods = ["GET", "HEAD"]
          allowed_origins = ["*"]
          expose_headers  = ["ETag"]
          max_age_seconds = 3000
        }
      ]
      
      # Public read access for HTML reports (dashboard integration)
      public_access_block = {
        block_public_acls       = false
        block_public_policy     = false
        ignore_public_acls      = false
        restrict_public_buckets = false
      }
      
      # Bucket policy for controlled public access to reports
      bucket_policy = jsonencode({
        Version = "2012-10-17"
        Statement = [
          {
            Effect = "Allow"
            Principal = "*"
            Action = "s3:GetObject"
            Resource = "arn:aws:s3:::bw-lambda-test-reports/test-reports/*"
            Condition = {
              StringEquals = {
                "s3:ExistingObjectTag/PublicAccess" = "true"
              }
            }
          },
          {
            Effect = "Allow"
            Principal = {
              AWS = dependency.iam.outputs.lambda_test_runner_role_arn
            }
            Action = [
              "s3:GetObject",
              "s3:PutObject",
              "s3:DeleteObject",
              "s3:PutObjectTagging"
            ]
            Resource = [
              "arn:aws:s3:::bw-lambda-test-reports/*",
              "arn:aws:s3:::bw-lambda-test-reports"
            ]
          }
        ]
      })
      
      # Server-side encryption
      server_side_encryption_configuration = {
        rule = {
          apply_server_side_encryption_by_default = {
            sse_algorithm = "AES256"
          }
          bucket_key_enabled = true
        }
      }
      
      # Versioning for report history
      versioning = {
        status = "Enabled"
      }
      
      tags = {
        Environment = local.environment
        Purpose     = "Lambda Test Runner Reports Storage"
        ManagedBy   = "Terraform"
        Owner       = "Brainsway"
      }
    }
  }
}