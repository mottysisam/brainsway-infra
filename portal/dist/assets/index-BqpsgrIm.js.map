{"version":3,"file":"index-BqpsgrIm.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/components/ReportCard.tsx","../../src/components/FilterBar.tsx","../../src/components/StatsCards.tsx","../../src/services/api.ts","../../src/pages/Dashboard.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { Clock, GitCommit, User, ExternalLink, CheckCircle, XCircle, Loader } from 'lucide-react'\nimport { DeploymentReport } from '@/types'\n\ninterface ReportCardProps {\n  report: DeploymentReport\n  onClick?: () => void\n}\n\nexport function ReportCard({ report, onClick }: ReportCardProps) {\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'success': return 'text-green-600 bg-green-50'\n      case 'failed': return 'text-red-600 bg-red-50'\n      case 'running': return 'text-yellow-600 bg-yellow-50'\n      default: return 'text-gray-600 bg-gray-50'\n    }\n  }\n\n  const getEnvironmentColor = (env: string) => {\n    switch (env) {\n      case 'dev': return 'bg-dev-100 text-dev-800'\n      case 'staging': return 'bg-staging-100 text-staging-800'\n      case 'prod': return 'bg-prod-100 text-prod-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'success': return <CheckCircle className=\"w-4 h-4\" />\n      case 'failed': return <XCircle className=\"w-4 h-4\" />\n      case 'running': return <Loader className=\"w-4 h-4 animate-spin\" />\n      default: return null\n    }\n  }\n\n  const formatDuration = (seconds?: number) => {\n    if (!seconds) return 'N/A'\n    const mins = Math.floor(seconds / 60)\n    const secs = seconds % 60\n    return `${mins}m ${secs}s`\n  }\n\n  const formatTimestamp = (timestamp: string) => {\n    return new Date(timestamp).toLocaleString()\n  }\n\n  return (\n    <div \n      className={`bg-white rounded-lg shadow-md p-6 border-l-4 border-${report.environment === 'dev' ? 'dev' : report.environment === 'staging' ? 'staging' : 'prod'}-500 transition-all hover:shadow-lg hover:scale-[1.02] cursor-pointer`}\n      onClick={onClick}\n    >\n      <div className=\"flex items-start justify-between mb-4\">\n        <div className=\"flex items-center space-x-3\">\n          <div className={`flex items-center space-x-2 px-3 py-1 rounded-full text-sm font-medium ${getStatusColor(report.status)}`}>\n            {getStatusIcon(report.status)}\n            <span className=\"capitalize\">{report.status}</span>\n          </div>\n          <span className={`px-2 py-1 text-xs font-semibold uppercase tracking-wide rounded-md ${getEnvironmentColor(report.environment)}`}>\n            {report.environment}\n          </span>\n        </div>\n        {report.url && (\n          <ExternalLink className=\"w-4 h-4 text-gray-400 hover:text-blue-500\" />\n        )}\n      </div>\n\n      <div className=\"mb-3\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-1 line-clamp-2\">\n          {report.message}\n        </h3>\n        <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\n          <div className=\"flex items-center space-x-1\">\n            <GitCommit className=\"w-4 h-4\" />\n            <span className=\"font-mono\">{report.commit}</span>\n          </div>\n          <div className=\"flex items-center space-x-1\">\n            <User className=\"w-4 h-4\" />\n            <span>{report.author}</span>\n          </div>\n          <div className=\"flex items-center space-x-1\">\n            <Clock className=\"w-4 h-4\" />\n            <span>{formatDuration(report.duration)}</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex items-center justify-between text-sm\">\n        <span className=\"text-gray-500 font-mono bg-gray-100 px-2 py-1 rounded\">\n          {report.branch}\n        </span>\n        <span className=\"text-gray-500\">\n          {formatTimestamp(report.timestamp)}\n        </span>\n      </div>\n\n      {report.changes.length > 0 && (\n        <div className=\"mt-4 pt-3 border-t border-gray-100\">\n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"text-gray-600\">Changes:</span>\n            <div className=\"flex space-x-3\">\n              {['create', 'update', 'delete'].map(action => {\n                const count = report.changes.filter(c => c.action === action).length\n                if (count === 0) return null\n                return (\n                  <span key={action} className={`inline-flex items-center px-2 py-1 text-xs rounded ${\n                    action === 'create' ? 'bg-green-100 text-green-800' :\n                    action === 'update' ? 'bg-blue-100 text-blue-800' :\n                    'bg-red-100 text-red-800'\n                  }`}>\n                    +{count} {action}\n                  </span>\n                )\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}","import { Filter, X, Search } from 'lucide-react'\nimport { FilterOptions } from '@/types'\nimport { useState } from 'react'\n\ninterface FilterBarProps {\n  filters: FilterOptions\n  onFilterChange: (filters: FilterOptions) => void\n  onClearFilters: () => void\n}\n\nexport function FilterBar({ filters, onFilterChange, onClearFilters }: FilterBarProps) {\n  const [searchTerm, setSearchTerm] = useState('')\n\n  const handleSearchSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    onFilterChange({ ...filters, branch: searchTerm })\n  }\n\n  const hasActiveFilters = Object.values(filters).some(value => \n    value !== undefined && value !== ''\n  )\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border p-4 mb-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center space-x-2\">\n          <Filter className=\"w-5 h-5 text-gray-500\" />\n          <h3 className=\"text-lg font-semibold text-gray-900\">Filters</h3>\n        </div>\n        {hasActiveFilters && (\n          <button\n            onClick={onClearFilters}\n            className=\"flex items-center space-x-1 text-sm text-gray-600 hover:text-gray-900 transition-colors\"\n          >\n            <X className=\"w-4 h-4\" />\n            <span>Clear All</span>\n          </button>\n        )}\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {/* Search Bar */}\n        <form onSubmit={handleSearchSubmit} className=\"relative\">\n          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n            <Search className=\"h-4 w-4 text-gray-400\" />\n          </div>\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            placeholder=\"Search branches...\"\n            className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n          />\n        </form>\n\n        {/* Environment Filter */}\n        <select\n          value={filters.environment || ''}\n          onChange={(e) => onFilterChange({ \n            ...filters, \n            environment: e.target.value as 'dev' | 'staging' | 'prod' | undefined\n          })}\n          className=\"block w-full px-3 py-2 border border-gray-300 rounded-md leading-5 bg-white focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n        >\n          <option value=\"\">All Environments</option>\n          <option value=\"dev\">Development</option>\n          <option value=\"staging\">Staging</option>\n          <option value=\"prod\">Production</option>\n        </select>\n\n        {/* Status Filter */}\n        <select\n          value={filters.status || ''}\n          onChange={(e) => onFilterChange({ \n            ...filters, \n            status: e.target.value as 'success' | 'failed' | 'running' | undefined\n          })}\n          className=\"block w-full px-3 py-2 border border-gray-300 rounded-md leading-5 bg-white focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n        >\n          <option value=\"\">All Statuses</option>\n          <option value=\"success\">Success</option>\n          <option value=\"failed\">Failed</option>\n          <option value=\"running\">Running</option>\n        </select>\n\n        {/* Author Filter */}\n        <input\n          type=\"text\"\n          value={filters.author || ''}\n          onChange={(e) => onFilterChange({ ...filters, author: e.target.value })}\n          placeholder=\"Filter by author...\"\n          className=\"block w-full px-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n        />\n      </div>\n\n      {/* Active Filter Tags */}\n      {hasActiveFilters && (\n        <div className=\"mt-4 pt-4 border-t border-gray-100\">\n          <div className=\"flex flex-wrap gap-2\">\n            {filters.environment && (\n              <span className=\"inline-flex items-center space-x-1 px-3 py-1 text-sm bg-blue-100 text-blue-800 rounded-full\">\n                <span>Environment: {filters.environment}</span>\n                <button\n                  onClick={() => onFilterChange({ ...filters, environment: undefined })}\n                  className=\"hover:text-blue-900\"\n                >\n                  <X className=\"w-3 h-3\" />\n                </button>\n              </span>\n            )}\n            {filters.status && (\n              <span className=\"inline-flex items-center space-x-1 px-3 py-1 text-sm bg-green-100 text-green-800 rounded-full\">\n                <span>Status: {filters.status}</span>\n                <button\n                  onClick={() => onFilterChange({ ...filters, status: undefined })}\n                  className=\"hover:text-green-900\"\n                >\n                  <X className=\"w-3 h-3\" />\n                </button>\n              </span>\n            )}\n            {filters.author && (\n              <span className=\"inline-flex items-center space-x-1 px-3 py-1 text-sm bg-purple-100 text-purple-800 rounded-full\">\n                <span>Author: {filters.author}</span>\n                <button\n                  onClick={() => onFilterChange({ ...filters, author: undefined })}\n                  className=\"hover:text-purple-900\"\n                >\n                  <X className=\"w-3 h-3\" />\n                </button>\n              </span>\n            )}\n            {filters.branch && (\n              <span className=\"inline-flex items-center space-x-1 px-3 py-1 text-sm bg-orange-100 text-orange-800 rounded-full\">\n                <span>Branch: {filters.branch}</span>\n                <button\n                  onClick={() => onFilterChange({ ...filters, branch: undefined })}\n                  className=\"hover:text-orange-900\"\n                >\n                  <X className=\"w-3 h-3\" />\n                </button>\n              </span>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}","import { BarChart3, Clock, CheckCircle, XCircle } from 'lucide-react'\nimport { EnvironmentStats } from '@/types'\n\ninterface StatsCardsProps {\n  stats: EnvironmentStats[]\n}\n\nexport function StatsCards({ stats }: StatsCardsProps) {\n  const totalDeployments = stats.reduce((sum, env) => sum + env.totalDeployments, 0)\n  const overallSuccessRate = stats.length > 0 \n    ? stats.reduce((sum, env) => sum + env.successRate * env.totalDeployments, 0) / totalDeployments\n    : 0\n  const averageDuration = stats.length > 0\n    ? stats.reduce((sum, env) => sum + env.averageDuration * env.totalDeployments, 0) / totalDeployments\n    : 0\n\n  const formatDuration = (seconds: number) => {\n    const mins = Math.floor(seconds / 60)\n    const secs = Math.round(seconds % 60)\n    return `${mins}m ${secs}s`\n  }\n\n  const formatPercentage = (value: number) => {\n    return `${Math.round(value * 100)}%`\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n      {/* Total Deployments */}\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-sm font-medium text-gray-600\">Total Deployments</p>\n            <p className=\"text-3xl font-bold text-gray-900\">{totalDeployments}</p>\n          </div>\n          <div className=\"p-3 bg-blue-100 rounded-full\">\n            <BarChart3 className=\"w-6 h-6 text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"mt-4\">\n          <div className=\"text-sm text-gray-500\">\n            Across all environments\n          </div>\n        </div>\n      </div>\n\n      {/* Success Rate */}\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-sm font-medium text-gray-600\">Success Rate</p>\n            <p className=\"text-3xl font-bold text-green-600\">\n              {formatPercentage(overallSuccessRate)}\n            </p>\n          </div>\n          <div className=\"p-3 bg-green-100 rounded-full\">\n            <CheckCircle className=\"w-6 h-6 text-green-600\" />\n          </div>\n        </div>\n        <div className=\"mt-4\">\n          <div className=\"text-sm text-gray-500\">\n            Overall success rate\n          </div>\n        </div>\n      </div>\n\n      {/* Average Duration */}\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-sm font-medium text-gray-600\">Avg Duration</p>\n            <p className=\"text-3xl font-bold text-blue-600\">\n              {formatDuration(averageDuration)}\n            </p>\n          </div>\n          <div className=\"p-3 bg-blue-100 rounded-full\">\n            <Clock className=\"w-6 h-6 text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"mt-4\">\n          <div className=\"text-sm text-gray-500\">\n            Average deployment time\n          </div>\n        </div>\n      </div>\n\n      {/* Failed Deployments */}\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-sm font-medium text-gray-600\">Failed</p>\n            <p className=\"text-3xl font-bold text-red-600\">\n              {totalDeployments - Math.round(overallSuccessRate * totalDeployments)}\n            </p>\n          </div>\n          <div className=\"p-3 bg-red-100 rounded-full\">\n            <XCircle className=\"w-6 h-6 text-red-600\" />\n          </div>\n        </div>\n        <div className=\"mt-4\">\n          <div className=\"text-sm text-gray-500\">\n            {formatPercentage(1 - overallSuccessRate)} failure rate\n          </div>\n        </div>\n      </div>\n\n      {/* Environment Breakdown */}\n      <div className=\"md:col-span-2 lg:col-span-4 bg-white rounded-lg shadow-sm border p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Environment Breakdown</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          {stats.map(env => (\n            <div key={env.environment} className=\"text-center p-4 rounded-lg bg-gray-50\">\n              <div className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium mb-2 ${\n                env.environment === 'dev' ? 'bg-dev-100 text-dev-800' :\n                env.environment === 'staging' ? 'bg-staging-100 text-staging-800' :\n                'bg-prod-100 text-prod-800'\n              }`}>\n                {env.environment.toUpperCase()}\n              </div>\n              <div className=\"space-y-2\">\n                <div>\n                  <div className=\"text-2xl font-bold text-gray-900\">{env.totalDeployments}</div>\n                  <div className=\"text-xs text-gray-500\">deployments</div>\n                </div>\n                <div>\n                  <div className=\"text-lg font-semibold text-green-600\">\n                    {formatPercentage(env.successRate)}\n                  </div>\n                  <div className=\"text-xs text-gray-500\">success rate</div>\n                </div>\n                <div>\n                  <div className=\"text-sm font-medium text-blue-600\">\n                    {formatDuration(env.averageDuration)}\n                  </div>\n                  <div className=\"text-xs text-gray-500\">avg duration</div>\n                </div>\n                {env.lastDeployment && (\n                  <div>\n                    <div className=\"text-xs text-gray-500\">\n                      Last: {new Date(env.lastDeployment).toLocaleDateString()}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}","import { DeploymentReport, FilterOptions } from '@/types'\n\n// Mock data for development - will be replaced with GitHub API integration\nconst mockReports: DeploymentReport[] = [\n  {\n    id: '1',\n    timestamp: '2025-01-10T14:30:00Z',\n    environment: 'dev',\n    branch: 'feat/portal-improvements',\n    commit: '5e0ee8b',\n    status: 'success',\n    duration: 180,\n    author: 'motty',\n    message: 'Add React portal for deployment visualization',\n    changes: [\n      { action: 'create', resource: 'portal/', resourceType: 'directory' },\n      { action: 'create', resource: 'portal/package.json', resourceType: 'file' },\n      { action: 'update', resource: '.github/workflows/deploy-portal.yml', resourceType: 'workflow' }\n    ]\n  },\n  {\n    id: '2',\n    timestamp: '2025-01-10T12:15:00Z',\n    environment: 'staging',\n    branch: 'feat/aurora-instances',\n    commit: 'aded054',\n    status: 'success',\n    duration: 320,\n    author: 'motty',\n    message: 'Implement Aurora Serverless v2 with proper writer instances',\n    changes: [\n      { action: 'create', resource: 'db-aurora-1-staging-instance-1', resourceType: 'aurora_cluster_instance' },\n      { action: 'update', resource: 'db-aurora-1-staging', resourceType: 'aurora_cluster' },\n      { action: 'update', resource: 'insight-production-db-staging', resourceType: 'aurora_cluster' }\n    ]\n  },\n  {\n    id: '3',\n    timestamp: '2025-01-10T10:45:00Z',\n    environment: 'prod',\n    branch: 'main',\n    commit: 'fbd6eb2',\n    status: 'success',\n    duration: 45,\n    author: 'motty',\n    message: 'Production import verification - no changes',\n    changes: [\n      { action: 'no-change', resource: 'db-aurora-1', resourceType: 'aurora_cluster' },\n      { action: 'no-change', resource: 'db-rds-1', resourceType: 'db_instance' }\n    ]\n  }\n]\n\nexport class ApiService {\n  private static baseUrl = import.meta.env.DEV\n    ? 'http://localhost:3000'\n    : 'https://mottysisam.github.io/brainsway-infra'\n\n  static async getReports(filters?: FilterOptions): Promise<DeploymentReport[]> {\n    // In development, return mock data\n    if (import.meta.env.DEV) {\n      let filteredReports = [...mockReports]\n      \n      if (filters) {\n        if (filters.environment) {\n          filteredReports = filteredReports.filter(r => r.environment === filters.environment)\n        }\n        if (filters.status) {\n          filteredReports = filteredReports.filter(r => r.status === filters.status)\n        }\n        if (filters.author) {\n          filteredReports = filteredReports.filter(r => \n            r.author.toLowerCase().includes(filters.author!.toLowerCase())\n          )\n        }\n        if (filters.branch) {\n          filteredReports = filteredReports.filter(r => \n            r.branch.toLowerCase().includes(filters.branch!.toLowerCase())\n          )\n        }\n      }\n      \n      return filteredReports.sort((a, b) => \n        new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\n      )\n    }\n\n    // Production: fetch from GitHub Pages manifest\n    try {\n      const response = await fetch(`${this.baseUrl}/reports/manifest.json`)\n      const manifest = await response.json()\n      return manifest.reports || []\n    } catch (error) {\n      console.error('Failed to fetch reports:', error)\n      return []\n    }\n  }\n\n  static async getReport(id: string): Promise<DeploymentReport | null> {\n    if (import.meta.env.DEV) {\n      return mockReports.find(r => r.id === id) || null\n    }\n\n    try {\n      const response = await fetch(`${this.baseUrl}/reports/${id}.json`)\n      return await response.json()\n    } catch (error) {\n      console.error(`Failed to fetch report ${id}:`, error)\n      return null\n    }\n  }\n}","import { useState, useEffect } from 'react'\nimport { ReportCard } from '@/components/ReportCard'\nimport { FilterBar } from '@/components/FilterBar'\nimport { StatsCards } from '@/components/StatsCards'\nimport { DeploymentReport, FilterOptions, EnvironmentStats } from '@/types'\nimport { ApiService } from '@/services/api'\nimport { RefreshCw, AlertCircle } from 'lucide-react'\n\nexport function Dashboard() {\n  const [reports, setReports] = useState<DeploymentReport[]>([])\n  const [filteredReports, setFilteredReports] = useState<DeploymentReport[]>([])\n  const [filters, setFilters] = useState<FilterOptions>({})\n  const [stats, setStats] = useState<EnvironmentStats[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [selectedReport, setSelectedReport] = useState<DeploymentReport | null>(null)\n\n  const loadReports = async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      const data = await ApiService.getReports()\n      setReports(data)\n      calculateStats(data)\n    } catch (err) {\n      setError('Failed to load deployment reports')\n      console.error('Error loading reports:', err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const calculateStats = (reportData: DeploymentReport[]) => {\n    const environments: ('dev' | 'staging' | 'prod')[] = ['dev', 'staging', 'prod']\n    const environmentStats: EnvironmentStats[] = environments.map(env => {\n      const envReports = reportData.filter(r => r.environment === env)\n      const successful = envReports.filter(r => r.status === 'success').length\n      const totalDuration = envReports.reduce((sum, r) => sum + (r.duration || 0), 0)\n      const lastDeployment = envReports.length > 0 \n        ? envReports.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime())[0].timestamp\n        : undefined\n\n      return {\n        environment: env,\n        totalDeployments: envReports.length,\n        successRate: envReports.length > 0 ? successful / envReports.length : 0,\n        averageDuration: envReports.length > 0 ? totalDuration / envReports.length : 0,\n        lastDeployment\n      }\n    })\n\n    setStats(environmentStats)\n  }\n\n  const applyFilters = async () => {\n    try {\n      const filtered = await ApiService.getReports(filters)\n      setFilteredReports(filtered)\n    } catch (err) {\n      console.error('Error applying filters:', err)\n      setFilteredReports(reports)\n    }\n  }\n\n  const handleFilterChange = (newFilters: FilterOptions) => {\n    setFilters(newFilters)\n  }\n\n  const handleClearFilters = () => {\n    setFilters({})\n  }\n\n  const handleReportClick = (report: DeploymentReport) => {\n    setSelectedReport(report)\n  }\n\n  const handleCloseReportDetail = () => {\n    setSelectedReport(null)\n  }\n\n  useEffect(() => {\n    loadReports()\n  }, [])\n\n  useEffect(() => {\n    applyFilters()\n  }, [filters, reports])\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <RefreshCw className=\"w-8 h-8 animate-spin text-blue-500 mx-auto mb-4\" />\n          <p className=\"text-gray-600\">Loading deployment reports...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <AlertCircle className=\"w-8 h-8 text-red-500 mx-auto mb-4\" />\n          <p className=\"text-red-600 mb-4\">{error}</p>\n          <button\n            onClick={loadReports}\n            className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors\"\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">\n                Brainsway Infrastructure Portal\n              </h1>\n              <p className=\"mt-2 text-gray-600\">\n                Interactive deployment report dashboard for AWS infrastructure\n              </p>\n            </div>\n            <button\n              onClick={loadReports}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors\"\n            >\n              <RefreshCw className=\"w-4 h-4\" />\n              <span>Refresh</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Statistics Cards */}\n        <StatsCards stats={stats} />\n\n        {/* Filters */}\n        <FilterBar\n          filters={filters}\n          onFilterChange={handleFilterChange}\n          onClearFilters={handleClearFilters}\n        />\n\n        {/* Reports Grid */}\n        <div className=\"mb-4 flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">\n            Deployment Reports\n            <span className=\"ml-2 text-sm font-normal text-gray-500\">\n              ({filteredReports.length} {filteredReports.length === 1 ? 'result' : 'results'})\n            </span>\n          </h2>\n        </div>\n\n        {filteredReports.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <div className=\"text-gray-400 mb-4\">\n              <AlertCircle className=\"w-12 h-12 mx-auto\" />\n            </div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No reports found</h3>\n            <p className=\"text-gray-600\">\n              {Object.values(filters).some(v => v) \n                ? 'Try adjusting your filters to see more results.'\n                : 'No deployment reports are available yet.'\n              }\n            </p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {filteredReports.map(report => (\n              <ReportCard\n                key={report.id}\n                report={report}\n                onClick={() => handleReportClick(report)}\n              />\n            ))}\n          </div>\n        )}\n\n        {/* Report Detail Modal */}\n        {selectedReport && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n            <div className=\"bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"p-6\">\n                <div className=\"flex items-center justify-between mb-6\">\n                  <h3 className=\"text-2xl font-bold text-gray-900\">\n                    Deployment Details\n                  </h3>\n                  <button\n                    onClick={handleCloseReportDetail}\n                    className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n                  >\n                    <span className=\"sr-only\">Close</span>\n                    <svg className=\"w-6 h-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                  </button>\n                </div>\n                \n                <div className=\"space-y-6\">\n                  <ReportCard report={selectedReport} />\n                  \n                  {selectedReport.changes.length > 0 && (\n                    <div>\n                      <h4 className=\"text-lg font-semibold text-gray-900 mb-3\">Resource Changes</h4>\n                      <div className=\"space-y-2\">\n                        {selectedReport.changes.map((change, index) => (\n                          <div \n                            key={index}\n                            className={`flex items-center space-x-3 p-3 rounded-lg ${\n                              change.action === 'create' ? 'bg-green-50' :\n                              change.action === 'update' ? 'bg-blue-50' :\n                              change.action === 'delete' ? 'bg-red-50' :\n                              'bg-gray-50'\n                            }`}\n                          >\n                            <span className={`inline-flex items-center px-2 py-1 text-xs font-medium rounded ${\n                              change.action === 'create' ? 'bg-green-100 text-green-800' :\n                              change.action === 'update' ? 'bg-blue-100 text-blue-800' :\n                              change.action === 'delete' ? 'bg-red-100 text-red-800' :\n                              'bg-gray-100 text-gray-800'\n                            }`}>\n                              {change.action.toUpperCase()}\n                            </span>\n                            <div>\n                              <div className=\"font-medium text-gray-900\">{change.resource}</div>\n                              <div className=\"text-sm text-gray-500\">{change.resourceType}</div>\n                              {change.details && (\n                                <div className=\"text-xs text-gray-400 mt-1\">{change.details}</div>\n                              )}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {selectedReport.terragruntOutput && (\n                    <div>\n                      <h4 className=\"text-lg font-semibold text-gray-900 mb-3\">Terragrunt Output</h4>\n                      <pre className=\"bg-gray-900 text-green-400 p-4 rounded-lg text-sm overflow-x-auto\">\n                        {selectedReport.terragruntOutput}\n                      </pre>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}","import { Dashboard } from '@/pages/Dashboard'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  )\n}\n\nexport default App","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport App from './App.tsx'\nimport './App.css'\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","createRoot","ReportCard","report","onClick","getStatusColor","status","getEnvironmentColor","env","getStatusIcon","jsx","CheckCircle","XCircle","Loader","formatDuration","seconds","mins","secs","formatTimestamp","timestamp","jsxs","ExternalLink","GitCommit","User","Clock","action","count","FilterBar","filters","onFilterChange","onClearFilters","searchTerm","setSearchTerm","useState","handleSearchSubmit","hasActiveFilters","value","Filter","X","Search","StatsCards","stats","totalDeployments","sum","overallSuccessRate","averageDuration","formatPercentage","BarChart3","ApiService","error","id","__publicField","Dashboard","reports","setReports","filteredReports","setFilteredReports","setFilters","setStats","loading","setLoading","setError","selectedReport","setSelectedReport","loadReports","data","calculateStats","err","reportData","environmentStats","envReports","r","successful","totalDuration","lastDeployment","applyFilters","filtered","handleFilterChange","newFilters","handleClearFilters","handleReportClick","handleCloseReportDetail","useEffect","RefreshCw","AlertCircle","v","change","index","App","StrictMode"],"mappings":"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","x_google_ignoreList":[0,1,2]}