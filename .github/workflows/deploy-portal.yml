name: Deploy Infrastructure Portal

on:
  push:
    branches: [ main ]
    paths: [ 'portal/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'portal/**' ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: portal/package-lock.json

      - name: Install dependencies
        run: |
          cd portal
          npm ci

      - name: Build portal
        run: |
          cd portal
          npm run build

      - name: Setup Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v4

      - name: Upload to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: portal/dist

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Build-only job for PRs (no deployment)
  pr-check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: portal/package-lock.json

      - name: Install dependencies
        run: |
          cd portal
          npm ci

      - name: Build portal
        run: |
          cd portal
          npm run build

      - name: Comment PR with preview info
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## ðŸš€ Portal Build Success
            
            The Infrastructure Portal has been built successfully! 
            
            **Build Summary:**
            - âœ… TypeScript compilation passed
            - âœ… Production build created
            - âœ… All components and dependencies resolved
            
            Once this PR is merged to main, the portal will be deployed to:
            ðŸ“Š **[brainsway-infra.github.io](https://mottysisam.github.io/brainsway-infra/)**
            
            ### What's included:
            - Interactive deployment dashboard
            - Real-time report filtering and search
            - Environment-specific analytics
            - Responsive design for mobile/desktop
            
            *The portal will automatically fetch deployment reports from future CI runs.*`;
            
            // Only comment once
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.find(comment => 
              comment.body.includes('ðŸš€ Portal Build Success')
            );
            
            if (!existingComment) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }