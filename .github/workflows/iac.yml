name: Infrastructure & Application CI/CD
run-name: "${{ github.event_name == 'pull_request' && '📋 Plan' || '🚀 Deploy' }} - ${{ github.ref_name }}"

on:
  pull_request:
    paths:
      - 'infra/**'
      - 'src/**'
      - '.github/workflows/**'
  push:
    branches: [main]
    paths:
      - 'infra/**'
      - 'src/**'
  issue_comment:
    types: [created]
  workflow_dispatch:

concurrency:
  group: iac-${{ github.ref }}
  cancel-in-progress: false

jobs:
  # Route to appropriate pipeline based on changes
  route-pipeline:
    name: "🔀 Route Pipeline"
    runs-on: ubuntu-latest
    outputs:
      run_infrastructure: ${{ steps.detect.outputs.run_infrastructure }}
      run_application: ${{ steps.detect.outputs.run_application }}
    
    steps:
      - name: "📥 Checkout Code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: "🔍 Detect Changes"
        id: detect
        run: |
          # Get changed files
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)
          elif [ "${{ github.event_name }}" = "push" ]; then
            CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          else
            # Manual trigger - run both
            echo "run_infrastructure=true" >> $GITHUB_OUTPUT
            echo "run_application=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Check for infrastructure changes
          if echo "$CHANGED_FILES" | grep -E "^infra/(live|modules)" > /dev/null; then
            echo "run_infrastructure=true" >> $GITHUB_OUTPUT
            echo "🏗️ Infrastructure changes detected"
          else
            echo "run_infrastructure=false" >> $GITHUB_OUTPUT
          fi
          
          # Check for application changes
          if echo "$CHANGED_FILES" | grep -E "^(infra/lambda-functions|src)" > /dev/null; then
            echo "run_application=true" >> $GITHUB_OUTPUT
            echo "📦 Application changes detected"
          else
            echo "run_application=false" >> $GITHUB_OUTPUT
          fi
  
  # Infrastructure Pipeline - Calls modular workflow
  infrastructure:
    needs: route-pipeline
    uses: .github/workflows/infra/infra-simple.yml
    with:
      environment: "dev"
      action: "plan"
    secrets: inherit
  
  # Application Pipeline (for now, just detect until workflows are established) 
  application:
    needs: route-pipeline
    if: needs.route-pipeline.outputs.run_application == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: "📦 Application Pipeline Status"
        run: |
          echo "📦 Application pipeline would run here"
          echo "Lambda code deployment will be handled by dedicated workflow"
          echo "Currently detecting changes and preparing for modular execution"
  
  # Unified Status Report
  status-report:
    needs: [route-pipeline, infrastructure, application]
    if: always()
    runs-on: ubuntu-latest
    
    steps:
      - name: "📊 Generate Status Summary"
        run: |
          echo "## 🔄 CI/CD Pipeline Summary"
          echo "**Trigger:** ${{ github.event_name }}"
          echo "**Branch:** ${{ github.ref_name }}"
          echo "✅ Pipeline executed successfully"
      
      - name: "💬 Comment on PR"
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            let comment = `## 🔄 CI/CD Pipeline Results\n\n`;
            comment += `✅ Pipeline executed successfully\n`;
            comment += `🔗 [View Logs](${context.payload.repository.html_url}/actions/runs/${{ github.run_id }})\n`;
            comment += `\n---\n*🤖 Automated CI/CD Pipeline*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });